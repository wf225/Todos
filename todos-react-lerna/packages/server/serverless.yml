# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: wubil-todos # NOTE: update this with your service name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  region: us-east-1
  deploymentBucket: wubil-todos-deploy # Deployment bucket name. Default is generated by the framework
  role: arn:aws:iam::414840001553:role/wubil-lambda-microservice-rule
  versionFunctions: false
  apiKeys: # List of API keys to be used by your service API Gateway REST API
    - dev-wubil-api-key

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
package:
  # include:
  #   - dist/**
  #   - node_modules/**
  exclude:
    - __tests__/**
    - coverage/**
    - node_modules/aws-sdk/**
    - node_modules/jest*/**
    - node_modules/serverless/**
    - src/**
    - package.json
    - webpack*.js
    - lambda_*.js

functions:
  todos:
    handler: lambda.handler
    name: ${self:provider.stage}-${self:service} # optional, Deployed Lambda name
    description: Todos deployed by serverless. # optional, Description to publish to AWS
    memorySize: 512 # optional, default is 1024
    timeout: 10 # optional, default is 6
    environment: # Define function environment variables here
      TABLE_NAME: Todos
    events:
      - http:
          path: api/test/{id}
          method: get
          request:
            parameters:
              paths:
                id: true
      - http:
          path: api/test/{id}/name/{name}
          method: get
          request:
            parameters:
              paths:
                id: true
                name: true
      - http:
          path: api/todo
          method: post
          cors: true
          private: true
      - http:
          path: api/todo/{id}
          method: put
          cors: true
          private: true
      - http:
          path: api/todo/{id}/{title}
          method: delete
          cors: true
          private: true
      - http:
          path: api/todos
          method: any
          cors: true
          private: true # Requires clients to add API keys values in the `x-api-key` header of their request

#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
# resources:
#   Resources:
#     ApiGatewayDeploymentProd:       
#       Type: "AWS::ApiGateway::Deployment"
#       Properties: 
#         RestApiId: 
#           Ref: "ApiGatewayRestApi"
#         Description: "Todos-prod"
#         StageName: "prod"
#       DependsOn: [
#         "ApiGatewayMethodApiTodoPost",
#         "ApiGatewayMethodApiTodoIdVarPut",
#         "ApiGatewayMethodApiTodoIdVarTitleVarDelete",
#         "ApiGatewayMethodApiTodosAny"
#       ]
#     DynamoDB:
#       Type: AWS::DynamoDB::Table
#       Properties:
#         TableName: Todos_2
#         AttributeDefinitions:
#           - AttributeName: id
#             AttributeType: S
#           - AttributeName: title
#             AttributeType: S
#         KeySchema:
#           - AttributeName: id
#             KeyType: HASH
#           - AttributeName: title
#             KeyType: RANGE
#         ProvisionedThroughput:
#           ReadCapacityUnits: 10
#           WriteCapacityUnits: 10
#     # S3Bucket:
#     #   Type: AWS::S3::Bucket
#     #   Properties:
#     #     BucketName: wubil-todos-deploy
#   Outputs:
#       NewOutput:
#         Description: "Description for the output"
#         Value: "Some output value"
